{"componentChunkName":"component---src-templates-blog-post-js","path":"/docs/blog/2019-07-03-customizing-styles-in-gatsby-themes-with-theme-ui/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"043d6724-c625-5ab5-8b90-ac79d27aa6c8","excerpt":"With Gatsby themes we want to make the experience of building a site as flexible and extensible as possible.\nThemes allow you to reuse site configurations, sets…","html":"<p>With Gatsby themes we want to make the experience of building a site as flexible and extensible as possible.\nThemes allow you to reuse site configurations, sets of plugins, and components across multiple Gatsby sites.\nWe’ve tried to design the API of themes to <a href=\"/gatsby-bloga-2/docs/gatsby-core-philosophy/#progressively-disclose-complexity\"><em>progressively disclose complexity</em></a>,\nwhere smart defaults are wrapped into abstractions, but customization and configuration are always available to you.\nThe styles used in our official themes are no exception.</p>\n<h2>Say hello to our official Gatsby themes</h2>\n<p>Today, we’re releasing two official themes: a blog theme inspired by Dan Abramov’s <a href=\"https://overreacted.io\">overreacted.io</a>, and our notes theme,\nwhich is intended for freeform, non-linear content and inspired by Tom Critchlow’s concept of a <em><a href=\"https://tomcritchlow.com/2019/02/17/building-digital-garden/\">Digital Garden</a></em>.\nBoth themes include their own styles so that you can build and publish a blog without starting from scratch.\nIn order to make these themes truly <em>themeable</em>, the values used for typography, color, layout, and other design tokens\ncan be customized by editing part or all of a <code class=\"language-text\">theme</code> configuration object.\nThis also means you can create and publish your own theme based on the official one,\nwith custom typography and colors, by editing an object instead of recreating entire components.</p>\n<p>For sites that have multiple themes installed,\nand to help ensure a consistent look and feel,\nyou can choose which theme’s styles take precedence based on their order in your Gatsby configuration.\nThe styles provided by each theme are only applied to the pages it generates,\ngiving you complete control of your site’s styles.</p>\n<p>Huge thanks to our own <a href=\"https://mobile.twitter.com/amber1ey\">Amberley Romo</a> &#x26; <a href=\"https://mobile.twitter.com/4lpine\">John Otander</a> for their incredible work on these themes.</p>\n<h2>Theme UI</h2>\n<p>To enable this level of style customization,\nwe’ve been working on a new open source library called <em><a href=\"https://theme-ui.com\">Theme UI</a></em>.\nFor authors of Gatsby themes, this library is entirely optional and in no way coupled to Gatsby themes,\nbut we encourage you to check it out.\nGatsby themes can be built without Theme UI, and Theme UI can be used without Gatsby.</p>\n<p>Theme UI is loosely based on the <a href=\"https://styled-system.com\">Styled System</a> library and a work-in-progress <a href=\"https://github.com/system-ui/theme-specification\">Theme Specification</a>.\nIf you haven’t used Styled System before, it’s a framework-agnostic library for building custom UI component libraries and design systems with constraint-based design principles at its core.\nStyled System is great for creating a custom design system in React,\nbut it falls short when it comes to styling content-heavy sites and doesn’t provide much guidance for creating truly themeable UI.\nStyled System also takes some effort to set up and generally requires creating custom components to get started.</p>\n<p>Theme UI is intended to address some of these issues by:</p>\n<ul>\n<li>Providing guidelines for how to create themeable UI and making configuration more portable</li>\n<li>Allowing developers to use consistent styles anywhere in React with minimum effort</li>\n<li>Enabling a simple way to style <a href=\"/gatsby-bloga-2/docs/mdx/\">MDX</a> content, while keeping styles isolated</li>\n<li>Abstracting some of the implementation details so you don’t need to start from scratch</li>\n</ul>\n<p>Theme UI currently includes optional packages for integrating with other libraries like <a href=\"/gatsby-bloga-2/docs/typography-js/\">Typography.js</a>,\nand we plan to build more tools and integrations around the core foundation of Theme UI to make styling Gatsby sites even better in the future.</p>\n<h2>Customizing the blog theme</h2>\n<p>To quickly demonstrate how this works,\nwe’ll walk through customizing the colors and typography used in the blog theme.\nUse the Gatsby CLI to create a new site with the blog theme starter.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">gatsby new my-blog https://github.com/gatsbyjs/gatsby-starter-blog-theme</code></pre></div>\n<p>Once the site has been created, change to the new <code class=\"language-text\">my-blog</code> directory and\nadd a <code class=\"language-text\">src/gatsby-plugin-theme-ui</code> directory to your site.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> my-blog\n<span class=\"token function\">mkdir</span> src/gatsby-plugin-theme-ui</code></pre></div>\n<p>Create an <code class=\"language-text\">index.js</code> file in this new directory to export the theme configuration object.</p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=src/gatsby-plugin-theme-ui/index.js\"><pre class=\"language-js:title=src/gatsby-plugin-theme-ui/index.js\"><code class=\"language-js:title=src/gatsby-plugin-theme-ui/index.js\">export default {\n  colors: {\n    text: &quot;#333&quot;,\n    background: &quot;#fff&quot;,\n    primary: &quot;tomato&quot;,\n  },\n  fonts: {\n    body: &quot;Georgia, serif&quot;,\n    heading: &quot;system-ui, sans-serif&quot;,\n  },\n}</code></pre></div>\n<p>By adding this file, the theme’s default styles will be completely reset and overridden by the values defined here.</p>\n<p>Under the hood, this uses the new <a href=\"/gatsby-bloga-2/blog/2019-04-29-component-shadowing/\">shadowing</a> feature introduced with Gatsby themes,\nwhich means that the blog theme’s default configuration can be imported and used as a base for customization.</p>\n<p>To extend the blog’s existing styles, import the configuration object\nand use object spread syntax to merge your own custom styles.</p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=src/gatsby-plugin-theme-ui/index.js\"><pre class=\"language-js:title=src/gatsby-plugin-theme-ui/index.js\"><code class=\"language-js:title=src/gatsby-plugin-theme-ui/index.js\">import baseTheme from &quot;gatsby-theme-blog/src/gatsby-plugin-theme-ui&quot;\n\nexport default {\n  ...baseTheme,\n  colors: {\n    ...baseTheme.colors,\n    text: &quot;#333&quot;,\n    background: &quot;#fff&quot;,\n    primary: &quot;tomato&quot;,\n  },\n  fonts: {\n    body: &quot;Georgia, serif&quot;,\n    heading: &quot;system-ui, sans-serif&quot;,\n  },\n}</code></pre></div>\n<p>With the configuration above, your site should include the same base styles as the official theme\nbut with a few custom colors and fonts.</p>\n<p>To learn more about how theming works with Theme UI, head over to the <a href=\"https://theme-ui.com\">Theme UI docs site</a>,\nand to learn more about using the official Gatsby themes, see our <a href=\"/gatsby-bloga-2/docs/themes/\">documentation on themes</a>.</p>","frontmatter":{"title":"Customizing Styles in Gatsby Themes with Theme UI","date":"July 03, 2019","description":null}}},"pageContext":{"slug":"/docs/blog/2019-07-03-customizing-styles-in-gatsby-themes-with-theme-ui/","previous":{"fields":{"slug":"/docs/blog/2019-07-03-using-themes-for-distributed-docs/"},"frontmatter":{"title":"Using Themes for Distributed Docs"}},"next":{"fields":{"slug":"/docs/blog/2019-07-03-announcing-stable-release-gatsby-themes/"},"frontmatter":{"title":"Announcing the Stable Release of Gatsby Themes!"}}}}}