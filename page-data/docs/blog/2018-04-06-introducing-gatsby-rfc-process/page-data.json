{"componentChunkName":"component---src-templates-blog-post-js","path":"/docs/blog/2018-04-06-introducing-gatsby-rfc-process/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"b9d82a81-d682-5ba0-b146-8fbb2be5979e","excerpt":"We’re adopting an RFC (“request for comments”) process for contributing ideas to Gatsby. Inspired by React, Yarn, Ember, and Rust, the goal is to allow Gatsby…","html":"<p>We’re adopting an RFC (“request for comments”) process for contributing ideas to Gatsby.</p>\n<p>Inspired by <a href=\"https://github.com/reactjs/rfcs\">React</a>, <a href=\"https://github.com/yarnpkg/rfcs\">Yarn</a>, <a href=\"https://github.com/emberjs/rfcs\">Ember</a>, and <a href=\"https://github.com/rust-lang/rfcs\">Rust</a>, the goal is to allow Gatsby core team members and community members to collaborate on the design of new features. It’s also intended to provide a clear path for ideas to enter the project:</p>\n<ul>\n<li>Create an RFC document detailing your proposal.</li>\n<li>Submit a PR to the <a href=\"https://github.com/gatsbyjs/rfcs\">RFC repository</a>.</li>\n<li>Incorporate feedback into the proposal.</li>\n<li>After discussion, the core team may or may not accept the RFC.</li>\n<li>If the RFC is accepted, the PR is merged.</li>\n</ul>\n<p>RFCs are accepted when they are approved for implementation in Gatsby. A more thorough description of the process is available in the repository’s <a href=\"https://github.com/gatsbyjs/rfcs/blob/master/README.md\">README</a>. The exact details may be refined in the future.</p>\n<h2>Who can submit RFCs?</h2>\n<p>Anyone! No knowledge of Gatsby’s internals is required, nor are you expected to implement the proposal yourself.</p>\n<h2>What types of changes should be submitted as RFCs?</h2>\n<p>Generally, any idea that would benefit from additional review or design before being implemented is a good candidate for an RFC. As a rule of thumb, this means any proposal that adds, changes, or removes a Gatsby API.</p>\n<p>Not every change must go through the RFC process. Bug fixes or performance improvements that don’t touch the API can be submitted directly to the main library.</p>\n<h2>RFCs for a new GitHub labeling system and to remove our special layout component</h2>\n<p>Coinciding with the launch of our RFC process, we’ve submitted a <a href=\"https://github.com/gatsbyjs/rfcs/pull/1\">proposal for a new GitHub labeling system</a> and a <a href=\"https://github.com/gatsbyjs/rfcs/pull/2\">proposal to remove our special layout component</a>. Both proposals have already received many valuable comments from the community that we’re incorporating into the design of the new process and API.</p>\n<p>Both PRs are good examples of how a typical RFC should be structured. We’re excited to start receiving your proposals!</p>","frontmatter":{"title":"Introducing the Gatsby RFC Process","date":"April 06, 2018","description":null}}},"pageContext":{"slug":"/docs/blog/2018-04-06-introducing-gatsby-rfc-process/","previous":{"fields":{"slug":"/docs/blog/2018-04-05-gatsby-video-tutorials/"},"frontmatter":{"title":"Gatsby video tutorials a four part video series on Gatsby and Contentful by Khaled Garbaya"}},"next":{"fields":{"slug":"/docs/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/"},"frontmatter":{"title":"How to handle comments in Gatsby blogs"}}}}}