{"componentChunkName":"component---src-templates-blog-post-js","path":"/docs/blog/2019-05-15-enterprise-gatsby-how-to-reduce-your-digital-total-cost-of-ownership-with-gatsby/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"6f6eeaaa-53ce-55e7-a6ee-bb05d61620c4","excerpt":"In recent years, there has seemingly been no shortage of disastrous digital rollouts and replatforms in the content management systems (CMS) landscape. Despite…","html":"<p>In recent years, there has seemingly been no shortage of disastrous digital rollouts and replatforms in the content management systems (CMS) landscape. Despite the fact that there have never been more CMSs available on the market, both open-source and proprietary, digital stakeholders are concerned — and rightly so — by questions surrounding cost, staffing, performance, and security.</p>\n<p>In 2017, for instance, the federal government of Canada, saddled with a <a href=\"https://www.cbc.ca/news/politics/federal-government-to-downsize-failing-canada-ca-project-1.4202563\">dysfunctional multimillion-dollar build of Canada.ca</a>, downsized the project after running into obstacles with Adobe Experience Manager. A similar story this year involving the <a href=\"https://www.theregister.co.uk/2019/04/23/hertz_accenture_lawsuit/\">botched build of Hertz’s new web presence</a> has unleashed recriminations and brought to the forefront an increasingly nagging question: Are these traditional CMS replatforms truly worth it, or are they financial boondoggles of questionable value?</p>\n<p>Even when a replatform or redesign is successful, issues abound in sustaining an open-source or proprietary CMS as the underlying foundation of a successful digital ecosystem in this day and age. While traditional CMSs like Drupal and WordPress still maintain enthusiastic and passionate communities, the depletion of support for community plugins and deepening concerns about CMS performance and security have led to much hand-wringing in open-source CMS communities.</p>\n<p>Fortunately, <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>, when leveraged in conjunction with a range of affordable services and downright inexpensive infrastructural and content management solutions, <a href=\"https://www.gatsbyjs.com/preview/\">including Gatsby’s own Preview</a>, can offer a way forward that can help reduce your digital total cost of ownership (TCO) and increase your digital return on investment (ROI) so you can focus on what matters most: building experiences that keep apace with your user’s expectations.</p>\n<p>In this blog post, we’ll dive into some of the ways in which Gatsby is optimal for the enterprise, whether you’re a developer championing Gatsby to the skeptical stakeholders in your organization or a marketer seeking the winning solution to your performance and preview woes. For additional background, our Director of Marketing, <a href=\"https://twitter.com/lindawatkins\">Linda Watkins</a>, also has <a href=\"https://www.gatsbyjs.org/blog/2019-03-07-sell-gatsby-to-clients/\">an excellent guide to talking about Gatsby</a> with your team or your customers.</p>\n<h2>Cost: Hosting Gatsby sites is much more affordable</h2>\n<p>In today’s CMS landscape it is no longer a rarity to hear of annual contract value (ACV) amounts that stretch into seven figures, well past the realm of affordability for most businesses. Products such as Adobe Experience Manager, Sitecore, Acquia Cloud, and WordPress VIP have increasingly focused more on the enterprise market as their cloud hosting platforms begin to show their age.</p>\n<p>What these million-dollar platform subscriptions have in common is the upward pressure on traditional server resources. As pageviews inevitably increase, the amount of expense needed to spin up new instances and load balancers becomes prohibitive. A simple spike in traffic due to a yearly event or viral social media post can lead to an eye-watering hosting bill next month due to the additional scale required.</p>\n<p>Static hosts such as <a href=\"https://www.netlify.com/\">Netlify</a> have found success in recent months due to their emphasis on painless builds and deployments, seamless integrations with tools like Gatsby, and hosting for mere pennies on the dollar thanks to a built-in content delivery network (CDN). Now that Netlify and others offer features such as free SSL, deploy previews, and AWS Lambda integration, they have become compelling rivals to traditional stalwarts like Acquia, Pantheon, and WordPress VIP.</p>\n<p>As an anecdotal example, I was pleasantly surprised that I was able to set up an architecture consisting of a Drupal site and Gatsby site in less than an hour thanks to Netlify’s free tier. Since I don’t need custom DNS for my Drupal site, I used Pantheon’s free tier for my Drupal hosting and found that configuring Pantheon took longer than on Netlify. Within less than an hour, I had free Drupal and Gatsby hosting and a custom domain for my Gatsby site, all at an unbeatable price of <em>zero dollars</em>.</p>\n<p>Enterprise users seeking a quick way to limit their TCO may look to hosting products such as Netlify and capabilities we are introducing to Gatsby Cloud for more affordable hosting. By decoupling monolithic CMS architectures like Drupal and WordPress, enterprise users can easily reduce their monthly hosting bill by multiple orders of magnitude, especially for less mission-critical web properties like brochureware and microsites.</p>\n<h2>Staffing: CMS developers are hard to find</h2>\n<p>One of the most common complaints I hear from enterprise users of CMSs is the paucity of available affordable developers to build out the digital architecture of their dreams. While there has always been downward pressure on the number of available Adobe and Sitecore developers due to their proprietary nature, the decline in the prevalence of Drupal and WordPress developers has reflected a larger trend.</p>\n<p>JavaScript is quickly winning out as the only language that can operate shared code across both client and server (in a paradigm known as <a href=\"https://dri.es/a-history-of-javascript-across-the-stack\"><em>universal</em> or <em>isomorphic</em> JavaScript</a>), and it has seen incredible growth in the web development community. In every year since 2014, JavaScript and Java have edged out other programming languages as the <a href=\"https://octoverse.github.com/#top-languages\">most commonly used on GitHub</a>. Meanwhile, PHP fell from third to fourth, and other previously popular languages like Ruby are seeing even steeper declines.</p>\n<p>As university programs and coding bootcamps continue to swap previously intermixed curricula with JavaScript-only pedagogies, JavaScript adoption has continued to widen. In Stack Overflow’s yearly Developer Survey, JavaScript has posted increases every year since 2016, when it was <a href=\"https://insights.stackoverflow.com/survey/2016#technology-most-popular-technologies\">voted most popular language</a> by 55.4% of respondents. In 2019, <a href=\"https://insights.stackoverflow.com/survey/2019#most-popular-technologies\">that percentage was 67.8%</a>. While these data only paint part of the picture, it is clear that JavaScript has emerged as the runaway victor when it comes to languages that cross the server–client divide.</p>\n<p>Many enterprise websites are stymied by the perceived scarcity of developer resources, whether it is due to a lack of specialized expertise or budgetary restrictions that limit available compensation. Today, it is no secret that PHP developers in the Drupal and WordPress communities command hourly rates and salaries that far outpace those of their JavaScript counterparts in the React and Vue.js communities. Glassdoor statistics support this, with <a href=\"https://www.glassdoor.com/Salaries/php-developer-salary-SRCH_KO0,13.htm\">PHP developers</a> paid on average $93,987 per year, while <a href=\"https://www.glassdoor.com/Salaries/javascript-developer-salary-SRCH_KO0,20.htm\">JavaScript developers</a> are compensated on average $72,500 per year.</p>\n<p>For enterprise users, hiring more affordable developers with a flexible, more modern skill set is one of the best ways to reduce TCO. In fact, many consultancies in the Drupal and PHP landscape are beginning to shore up their JavaScript and React resources to prepare for a coming wave of client work that places a high premium on interactive user experiences but refuses to pay more for the same expected end result.</p>\n<h2>Performance: Optimization at every page interaction</h2>\n<p>Enterprises today expect fast performance at every stage of page interaction: first load, moving between pages, and dynamic updates and transitions that occur after page load. Traditional CMSs like Adobe, Drupal, Sitecore, and WordPress have long struggled with performance bottlenecks at each step of this process, whether it is due to an oversized server bootstrap, overly stale cache, a lack of prefetching across linked pages, or an unwieldy Ajax or JavaScript API for frontend interactions. As new users continue to acquire smartphones at a high rate in low-bandwidth network areas, these concerns become even more paramount.</p>\n<p>Gatsby solves all of these problems thanks to its focus on rendering server-side markup first and foremost before handing off all asynchronous rendering to a React application initialized client-side. With its prefetching, Gatsby users can rest assured that any link click will lead to an instantaneous render rather than a roundtrip back to the server. Moreover, because React controls all state after the page has loaded, the management of interactive functionality becomes a much simpler consideration. Our very own <a href=\"https://dustinschau.com/\">Dustin Schau</a> recently penned a deep dive into <a href=\"https://www.gatsbyjs.org/blog/2019-04-02-behind-the-scenes-what-makes-gatsby-great/\">what makes Gatsby’s performance so incredible</a>.</p>\n<p>These performance benefits also advantage other important enterprise priorities such as accessibility. In a market segment where a site’s user experience can lead to outsized consequences on a company’s bottom line, accessibility is an essential component of any CMS architecture. Due to its rigid emphasis on server-side rendering and progressive enhancement, Gatsby is accessible out of the box, and with the help of libraries such as <code class=\"language-text\">@reach/router</code>, its focus management and keyboard interactions are second to none. Our Head of Learning, <a href=\"https://marcysutton.com/\">Marcy Sutton</a>, recently wrote about <a href=\"https://www.gatsbyjs.org/blog/2019-04-18-gatsby-commitment-to-accessibility/\">our commitment to accessibility</a> and released Gatsby’s first <a href=\"https://www.gatsbyjs.org/accessibility-statement\">Accessibility Statement</a>. In addition, <a href=\"https://www.youtube.com/watch?v=8lrmC8ZIGPY\">an A11y Talks episode last week</a> about accessibility in the <a href=\"/gatsby-bloga-2/docs/headless-cms/\">headless CMS</a> landscape touched on of Gatsby’s most distinctive accessibility features and how they compare to prevailing traditional CMS approaches.</p>\n<p>Enterprise Gatsby users can benefit immediately from two key sets of advantages built into Gatsby and its infrastructure: delivery optimization and payload optimization. Because Gatsby sites, at their foundation, are static sites, they can be deployed without a server and cached in a content delivery network (CDN) that reduces the time for assets to arrive on a user’s device. In addition, thanks to performance enhancements on Gatsby itself, such as progressive image loading and responsive image handling, as well as CSS inlining, Gatsby sites tend to be much faster than their traditional CMS counterparts.</p>\n<p>If you are still skeptical about Gatsby’s enterprise-readiness when it comes to performance, consider the steady stream of success stories that we have already seen coming from Gatsby users, including organizations like <a href=\"https://www.youfit.com/\">Youfit</a>, which <a href=\"https://www.gatsbyjs.org/blog/2018-11-16-youfit-case-study/\">saw a 22% increase in organic traffic and a 60% increase in lead conversion rates</a> after improving performance and accessibility outcomes, and <a href=\"https://sendgrid.com/\">SendGrid</a>, whose knowledge center <a href=\"https://www.gatsbyjs.org/blog/2018-09-27-sendgrid-knowledge-center-cuts-page-load-times-in-half-with-gatsby/\">halved page load times</a> thanks to Gatsby’s performance optimizations. <a href=\"https://www.ibm.com/\">IBM</a>, too, perhaps the ultimate enterprise technology company, <a href=\"https://www.gatsbyjs.org/blog/2018-12-17-ibm-case-study/\">found striking Lighthouse score increases of up to 89 points</a> in every category during a new site build for the Carbon Design System project, and <a href=\"https://www.harrys.com/en/us\">Harry’s</a>, while implementing the site for their new women’s brand <a href=\"https://www.shopflamingo.com/\">Flamingo</a>, <a href=\"https://www.gatsbyjs.org/blog/2019-01-30-flamingo-case-study/\">discovered that pages were loading five times faster</a> than before thanks to Gatsby.</p>\n<h2>Security: CMS vulnerabilities are increasingly frequent</h2>\n<p>As a longtime member of the Drupal community, I vividly remember the first several days and weeks after <a href=\"https://www.bbc.com/news/technology-29846539\">Drupalgeddon</a>, one of the worst vulnerabilities to afflict Drupal sites and a wake-up call for the Drupal community when it came to security. Even today, security issues are announced at a steady pace in the Drupal and WordPress communities, and developers are often pressed into service in the wee hours of the morning to patch their sites before they are hacked into oblivion. These are expensive and highly disruptive sources of abject terror in any enterprise organization.</p>\n<p>The notion of active servers being accessed by nefarious actors is entirely foreign to Gatsby and other JAMstack technologies that traffic solely in static assets and content cached in CDNs. There are no active databases to infiltrate and certainly no administrative CMS interfaces located on the same domain as a Gatsby site. These two components of security illustrate how effective Gatsby is in this area: one can’t hack Gatsby because there’s nothing running to hack, and one can’t hack Gatsby’s data because CMSs and data layers are located elsewhere.</p>\n<p>This brings us to one of the most compelling benefits of decoupled CMS architectures that exemplify the separation of concerns between content production and content display. Because Gatsby sites start out as static assets and simple markup, they are effectively flat manifests of content uncoupled from their production and storage. In fact, a Gatsby build could feasibly occur with content sourced from a locally hosted or firewalled CMS inaccessible to the wider web — and attackers would be none the wiser!</p>\n<p>For enterprise users, some of the contextual administration capabilities available in CMSs such as in-context editing and layout management have led to a tight coupling between content and its display that leads directly to vulnerabilities like the one that decimated so many Drupal sites in late 2014 (and <a href=\"https://research.checkpoint.com/uncovering-drupalgeddon-2/\">again in 2018</a>). By utilizing a content mesh architecture (see <a href=\"https://www.gatsbyjs.org/blog/2018-10-10-unbundling-of-the-cms/\">Sam Bhagwat’s article series</a> for an excellent treatment of these approaches) with many arbitrarily interchangeable services, enterprises can not only force threats to disperse to a variety of discrete services but also lock down their content management and data access entirely.</p>\n<h2>At Gatsby, Preview is just the beginning</h2>\n<p>Earlier this year, <a href=\"https://marisamorby.com/\">Marisa Morby</a>, our Product Manager, <a href=\"https://www.gatsbyjs.org/blog/2019-03-22-introducing-gatsby-preview-beta/\">announced a closed beta for our Gatsby Preview product</a>, which will make it painlessly easy for content marketers and editors to preview their content in context on a Gatsby site with as little overhead or latency as possible. With initial support for content management workflows using Contentful, we are hard at work to enable rollouts on a variety of CMSs across the spectrum of solutions. <a href=\"https://www.gatsbyjs.com/preview\">Sign up for the waitlist</a> for open beta today!</p>\n<p>Many of us at Gatsby have enterprise CMS backgrounds and deeply understand the problem of fast deployments and fast content updates, both of which have a considerable impact on a company’s internal developer experience and content staleness. Add in the volatile elements of embargoed content and regulatory compliance, and the picture becomes more complicated still.</p>\n<p>Fortunately, Gatsby is currently hard at work on supporting incremental builds for Gatsby Cloud, which will allow changes in large content corpuses (i.e. 100,000 or 1,000,000 content nodes and higher) to be reflected in partial Gatsby rebuilds that only incorporate content that changed since the last deployment. Previously, Gatsby builds would require a full import of all content, leading to prohibitively long deployment times for sites relying on gargantuan and highly relational content sources.</p>\n<h2>Conclusion: Gatsby is enterprise-ready</h2>\n<p>At Gatsby, we’ve heard many questions about whether Gatsby is truly ready for the enterprise. The short answer is yes or very soon, depending on your requirements. After all, Gatsby currently lacks many of the features that end-to-end CMSs routinely tout such as contextual editing and layout manipulation. At the moment it also doesn’t have some of the features needed to support compliance in the evolving digital landscape such as HIPAA, FEDRamp, and others, but they are on our radar.</p>\n<p>Nonetheless, Gatsby makes up what it lacks at the moment in the administrative experience with benefits in other ways that make it a uniquely compelling choice for enterprises seeking an ambitious developer-first solution paired with sensible defaults for performance and security. If you are seeking a decoupled CMS solution that includes a fast-off-the-shelf frontend and security benefits that stand up to any traditional CMS currently in vogue, Gatsby should be at the top of your list of considerations.</p>\n<p>We’re just getting started! In addition to our ongoing beta for <a href=\"https://gatsbyjs.com/preview\">Gatsby Preview</a>, soon to be opened up to the general public in open beta (<a href=\"https://gatsbyjs.com/preview\">join the waitlist</a> today!), we’re hard at work on features we know will be relevant not only to Gatsby’s early adopters but also enterprise users who require fast deployment times in addition to live high-fidelity preview and quicker turnarounds in content production workflows.</p>\n<p>You’ll soon be hearing much more from us on this, and we’re excited to share it all with you!</p>\n<p><em>Special thanks to <a href=\"https://twitter.com/calcsam\">Sam Bhagwat</a>, <a href=\"https://twitter.com/unclejge\">Jim Ettig</a>, <a href=\"https://twitter.com/michellegienow\">Michelle Gienow</a>, <a href=\"https://twitter.com/jlengstorf\">Jason Lengstorf</a>, <a href=\"https://twitter.com/kylemathews\">Kyle Mathews</a>, <a href=\"https://twitter.com/marisamorby\">Marisa Morby</a>, and <a href=\"https://twitter.com/lindawatkins\">Linda Watkins</a> for their feedback during the writing process.</em></p>","frontmatter":{"title":"Enterprise Gatsby: How to Reduce Your Digital Total Cost of Ownership (TCO) with Gatsby","date":"May 15, 2019","description":null}}},"pageContext":{"slug":"/docs/blog/2019-05-15-enterprise-gatsby-how-to-reduce-your-digital-total-cost-of-ownership-with-gatsby/","previous":{"fields":{"slug":"/docs/blog/2019-05-03-how-gatsby-helped-jump-start-my-engineering-career/"},"frontmatter":{"title":"How Gatsby Helped Jump-Start My Engineering Career"}},"next":{"fields":{"slug":"/docs/blog/2019-05-17-improvements-to-schema-customization/"},"frontmatter":{"title":"Improvements to Schema Customization API - Available in Gatsby 2.5.0"}}}}}