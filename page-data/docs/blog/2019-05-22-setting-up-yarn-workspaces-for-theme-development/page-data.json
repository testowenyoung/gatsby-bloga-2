{"componentChunkName":"component---src-templates-blog-post-js","path":"/docs/blog/2019-05-22-setting-up-yarn-workspaces-for-theme-development/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"63ce3e40-8428-5d25-935e-e7497f9afb38","excerpt":"Gatsby themes are a new way to share functionality across multiple Gatsby sites.\nYarn workspaces are an excellent way to set up a project for theme development…","html":"<p>Gatsby <a href=\"/gatsby-bloga-2/blog/tags/themes\">themes</a> are a new way to share functionality across multiple Gatsby sites.\n<a href=\"https://yarnpkg.com/lang/en/docs/workspaces/\">Yarn workspaces</a> are an excellent way to set up a project for theme development because they allow you to keep multiple packages in a single parent directory and link dependencies together.\nFor Gatsby theme development, that means you can keep multiple themes and example sites together in a single project.\nIn this post, we’ll walk through how to use Yarn workspaces to set up a development environment for creating custom themes.</p>\n<h2>Installation and directory structure</h2>\n<p>First, if you don’t have Yarn installed already, follow the directions here to <a href=\"https://yarnpkg.com/en/docs/install\">install Yarn</a>.\nNext, create a new directory for the entire project, where you’ll be adding your theme and an example site later.</p>\n<p>Create two subdirectories in this folder: one for the theme itself and one for the example site.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> gatsby-theme-example-workspaces example</code></pre></div>\n<p>Add a <code class=\"language-text\">package.json</code> to the root directory with these subdirectories in the <code class=\"language-text\">workspaces</code> field. Note that setting <code class=\"language-text\">&quot;private&quot;: true</code> is required for Yarn workspaces.</p>\n<div class=\"gatsby-highlight\" data-language=\"json:title=package.json\"><pre class=\"language-json:title=package.json\"><code class=\"language-json:title=package.json\">{\n  &quot;private&quot;: true,\n  &quot;workspaces&quot;: [&quot;gatsby-theme-example-workspaces&quot;, &quot;example&quot;]\n}</code></pre></div>\n<p>Change to each subdirectory and run <code class=\"language-text\">yarn init -y</code> to create a <code class=\"language-text\">package.json</code> for each one.\nBe sure the <code class=\"language-text\">name</code> field in your theme’s <code class=\"language-text\">package.json</code> matches the directory name exactly.\nThis is currently a limitation of Gatsby theme shadowing, not Yarn workspaces.</p>\n<p>Your directory structure should now look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">example/\n  package.json\ngatsby-theme-example-workspaces/\n  package.json</code></pre></div>\n<p>From the root directory, run the following to install Gatsby’s dependencies for the example site.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> workspace example <span class=\"token function\">add</span> gatsby react react-dom</code></pre></div>\n<p>The <code class=\"language-text\">yarn workspace &lt;package&gt;</code> command will run Yarn commands for a specific workspace without needing to switch directories.</p>\n<p>Then add the following as peer dependencies to the theme.\nThis will ensure that the end user of your theme can choose any compatible version of Gatsby.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> workspace gatsby-theme-example-workspaces <span class=\"token function\">add</span> --peer gatsby react react-dom</code></pre></div>\n<h2>Base theme setup</h2>\n<p>Add a <code class=\"language-text\">gatsby-config.js</code> file to the theme directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=gatsby-theme-example-workspaces/gatsby-config.js\"><pre class=\"language-js:title=gatsby-theme-example-workspaces/gatsby-config.js\"><code class=\"language-js:title=gatsby-theme-example-workspaces/gatsby-config.js\">module.exports = {\n  plugins: [],\n}</code></pre></div>\n<p>Change the <code class=\"language-text\">main</code> field in your theme’s <code class=\"language-text\">package.json</code> to point to the <code class=\"language-text\">gatsby-config.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"json:title=gatsby-theme-example-workspaces/package.json\"><pre class=\"language-json:title=gatsby-theme-example-workspaces/package.json\"><code class=\"language-json:title=gatsby-theme-example-workspaces/package.json\">{\n  &quot;name&quot;: &quot;gatsby-theme-example-workspaces&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;main&quot;: &quot;gatsby-config.js&quot;, // highlight-line\n  &quot;license&quot;: &quot;MIT&quot;,\n  &quot;peerDependencies&quot;: {\n    &quot;gatsby&quot;: &quot;^2.2.10&quot;,\n    &quot;react&quot;: &quot;^16.8.5&quot;,\n    &quot;react-dom&quot;: &quot;^16.8.5&quot;\n  }\n}</code></pre></div>\n<h2>Example site setup</h2>\n<p>Add the theme as a dependency to the example site.\nBy specifying the version here, Yarn will install the local dependency that hasn’t been published to npm yet.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> workspace example <span class=\"token function\">add</span> gatsby-theme-example-workspaces@1.0.0</code></pre></div>\n<p>In the example site, create a <code class=\"language-text\">gatsby-config.js</code> file and add the theme.</p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=example/gatsby-config.js\"><pre class=\"language-js:title=example/gatsby-config.js\"><code class=\"language-js:title=example/gatsby-config.js\">module.exports = {\n  plugins: [&quot;gatsby-theme-example-workspaces&quot;],\n}</code></pre></div>\n<p>Add a <code class=\"language-text\">src/pages/</code> directory and add a <em>Hello, world</em> page.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx:title=example/src/pages/index.js\"><pre class=\"language-jsx:title=example/src/pages/index.js\"><code class=\"language-jsx:title=example/src/pages/index.js\">import React from &quot;react&quot;\n\nexport default function Home(props) {\n  return &lt;h1&gt;Hello, world&lt;/h1&gt;\n}</code></pre></div>\n<p>Add Gatsby develop and build scripts to the example site’s <code class=\"language-text\">package.json</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json:title=example/package.json\"><pre class=\"language-json:title=example/package.json\"><code class=\"language-json:title=example/package.json\">{\n  &quot;name&quot;: &quot;example&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;main&quot;: &quot;index.js&quot;,\n  &quot;license&quot;: &quot;MIT&quot;,\n  // highlight-start\n  &quot;scripts&quot;: {\n    &quot;develop&quot;: &quot;gatsby develop&quot;,\n    &quot;build&quot;: &quot;gatsby build&quot;\n  },\n  // highlight-end\n  &quot;dependencies&quot;: {\n    &quot;gatsby&quot;: &quot;^2.2.10&quot;,\n    &quot;gatsby-theme-example-workspaces&quot;: &quot;1.0.0&quot;,\n    &quot;react&quot;: &quot;^16.8.5&quot;,\n    &quot;react-dom&quot;: &quot;^16.8.5&quot;\n  }\n}</code></pre></div>\n<p>Test your example site out to make sure everything is working as expected.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> workspace example develop</code></pre></div>\n<p>Open your browser to <code class=\"language-text\">http://localhost:8000</code> where you should see your <em>Hello, world</em> page.</p>\n<h2>Adding functionality to the theme</h2>\n<p>Currently, the theme does nothing.\nThis is the minimal amount of code required to develop a theme with Yarn workspaces.</p>\n<p>To demonstrate the theme in action, use <code class=\"language-text\">gatsby-plugin-page-creator</code> to add a page from the theme.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> workspace gatsby-theme-example-workspaces <span class=\"token function\">add</span> gatsby-plugin-page-creator</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js:title=gatsby-theme-example-workspaces/gatsby-config.js\"><pre class=\"language-js:title=gatsby-theme-example-workspaces/gatsby-config.js\"><code class=\"language-js:title=gatsby-theme-example-workspaces/gatsby-config.js\">const path = require(&quot;path&quot;) // highlight-line\nmodule.exports = {\n  plugins: [\n    // highlight-start\n    {\n      resolve: &quot;gatsby-plugin-page-creator&quot;,\n      options: {\n        path: path.join(__dirname, &quot;src/pages&quot;),\n      },\n    },\n    // highlight-end\n  ],\n}</code></pre></div>\n<p>Make a <code class=\"language-text\">src/pages</code> directory in the theme and add a demo page.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx:title=gatsby-theme-example-workspaces/src/pages/theme-page.js\"><pre class=\"language-jsx:title=gatsby-theme-example-workspaces/src/pages/theme-page.js\"><code class=\"language-jsx:title=gatsby-theme-example-workspaces/src/pages/theme-page.js\">import React from &quot;react&quot;\n\nexport default function ThemePage(props) {\n  return &lt;h1&gt;Hello, from the theme!&lt;/h1&gt;\n}</code></pre></div>\n<p>Stop and restart the Gatsby development server to pick up the new page from the theme. The theme’s page should be visible at <code class=\"language-text\">http://localhost:8000/theme-page</code>.</p>\n<p>That’s it! By now you should have a basic Yarn workspaces setup to develop Gatsby themes with.\nBe sure to look for more posts on developing Gatsby themes in the near future,\nand you can read more about themes here on the <a href=\"/gatsby-bloga-2/blog/tags/themes\">blog</a>.</p>","frontmatter":{"title":"Setting up Yarn Workspaces for Theme Development","date":"May 22, 2019","description":null}}},"pageContext":{"slug":"/docs/blog/2019-05-22-setting-up-yarn-workspaces-for-theme-development/","previous":{"fields":{"slug":"/docs/blog/2019-05-07-advanced-sitemap-plugin-for-seo/"},"frontmatter":{"title":"Advanced Sitemap Plugin for SEO"}},"next":{"fields":{"slug":"/docs/blog/2019-05-22-cli-error-redesign/"},"frontmatter":{"title":"Lions and Tigers and Errors, Oh My! Redesigning the Gatsby CLI"}}}}}